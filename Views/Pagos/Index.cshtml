@model IEnumerable<inmobiliaria.Models.Pago>
@using inmobiliaria.Models
@{
    ViewData["Title"] = "Listado de Contratos";
    Inquilino inquilino = ViewBag.Inquilino;
}

<div class="text-center">
    <h1>Contratos</h1>
</div>
<div>
    <a class="btn btn-primary" asp-controller="Contratos" asp-action="Formulario">Registrar</a>
</div>
  <div>
    <select id="IdInquilino" style="width: 300px;">
      @if (inquilino != null){
        <option selected value="@inquilino.Id">@inquilino.Nombre @inquilino.Apellido (@inquilino.Dni)</option>
      }
    </select>
  </div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.NumeroPago)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdContrato)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Fecha)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CorrespondeAMes)
            </th>
        @if(User.IsInRole("Administrador"))
        {
            <th>
                @Html.DisplayNameFor(model => model.CreadoPor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AnuladoPor)
            </th>
        }
            <th>Acci√≥n</th>
        </tr>
    </thead>
    <tbody id="pagos_body">
    </tbody>
</table>
<div class="modal fade" id="detalle" tabindex="-1" aria-labelledby="detalleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="detalleModalLabel">Detalles del contrato</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
      <p id="propietario"></p>
        <p id="inquilino"></p>
        <p id="inmueble"></p>
        <p id="monto"></p>
        <p id="fecha_desde"></p>
        <p id="fecha_hasta"></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>
@section Scripts {

    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script> 
    $('#IdInquilino').select2(
        {
            placeholder: "Seleccione un Inquilino",
            ajax: {
                url: '/Inquilinos/Buscar',
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        nombre: params.term
                    };
                },
                processResults: function (data) {
                    return {
                            results: data.map(element => {
                            return { id: element.id, text: element.nombre}
                        })
                    };
                },
                cache: true
            },
            minimumInputLength: 3,
        }
    )
  function cargarFila(p) {
    const corresponde = p.CorrespondeAMes ? formatDate(p.CorrespondeAMes) : '';
    return `
      <tr data-id="${p.Id}">
        <td>${p.numeroPago ?? ''}</td>
        <td>${p.idContrato ?? ''}</td>
        <td>${p.fecha}</td>
        <td>${p.correspondeAMes}</td>
        
        @if(User.IsInRole("Administrador"))
        {
        <td>${p.creadoPor}</td>
        <td>${p.anuladoPor}</td>
        }
        <td>

        @if(User.IsInRole("Administrador"))
        {
          <a class="btn btn-danger btn-sm" href="/Pagos/Eliminar/${p.Id}">Eliminar</a>
}
          <button type="button" class="btn btn-primary btn-sm" onclick="cargarDatos(${p.Id})">
            Detalle
          </button>
        </td>
      </tr>
    `;
  }


  function cargarPagos(idInquilino) {
    let url = "/Pagos/Listar";
    if (idInquilino)
      url += "?idInquilino=" + idInquilino;
    fetch(url)
      .then(res => {
        if (!res.ok) throw new Error('Error al obtener pagos: ' + res.status);
        return res.json();
      })
      .then(data => {
        const tbody = document.getElementById('pagos_body');
        tbody.innerHTML = ""
        tbody.innerHTML = data.map(cargarFila).join('');
      })
      .catch(err => {
        console.error(err);
        toastr.error("Error al cargar los pagos")
      });
  }
  cargarPagos(document.getElementById('IdInquilino').value);
      $('#IdInquilino').on('change', (e) => {
        cargarPagos(e.target.value)
      })
        function cargarDatos(item){

            const datos = fetch('/Contratos/BuscarPorId/' + item)
            .then(response => response.json())
            .then(data => {
                console.log(data);
                document.getElementById('propietario').innerHTML = "<b>Propietario</b>: <br>" + data.inmueble.propietario.nombre + " " + data.inmueble.propietario.apellido + " (" + data.inmueble.propietario.dni + ")";
                document.getElementById('inquilino').innerHTML = "<b>Inquilino</b>: <br>" + data.inquilino.nombre + " " + data.inquilino.apellido + " (" + data.inquilino.dni + ")";
                document.getElementById('inmueble').innerHTML = "<b>Inmueble</b>: <br> " + data.inmueble.direccion;
                document.getElementById('monto').innerHTML = "<b>Monto</b>: <br>" + data.monto;
                document.getElementById('fecha_desde').innerHTML = "<b>Fecha inicio</b>: <br>" + data.fechaDesde;
                document.getElementById('fecha_hasta').innerHTML = "<b>Fecha hasta</b>: <br>" + data.fechaHasta;
                $('#detalle').modal('show');
            })
            .catch(error => {
                console.error('Error:', error)
                toastr.error('No se pudieron cargar los detalles del contrato');
                });
        }
        cargarPagos();
    </script>
    }
